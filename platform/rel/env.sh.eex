#!/bin/sh

# Sets and enables heart (recommended only in daemon mode)
# case $RELEASE_COMMAND in
#   daemon*)
#     HEART_COMMAND="$RELEASE_ROOT/bin/$RELEASE_NAME $RELEASE_COMMAND"
#     export HEART_COMMAND
#     export ELIXIR_ERL_OPTIONS="-heart"
#     ;;
#   *)
#     ;;
# esac

# Set the release to work across nodes.
# RELEASE_DISTRIBUTION must be "sname" (local), "name" (distributed) or "none".
# export RELEASE_DISTRIBUTION=name
# export RELEASE_NODE=<%= @release.name %>

if [ -n "$FLY_APP_NAME" ]; then
  ip=$(grep fly-local-6pn /etc/hosts | cut -f 1)
  export RELEASE_DISTRIBUTION=name
  export RELEASE_NODE=$FLY_APP_NAME@$ip
else
  # Assume we're running on Azure Container Apps
  # Wait for MSI_ENDPOINT to be available
  while true; do
    if nc -zv $(echo $MSI_ENDPOINT | awk -F/ '{print $3}' | cut -d: -f1) $(echo $MSI_ENDPOINT | awk -F/ '{print $3}' | cut -d: -f2) > /dev/null 2>&1; then
        echo "$MSI_ENDPOINT is now accepting connections."
        break
    else
        echo "$MSI_ENDPOINT is refusing connections. Waiting..."
        sleep 5
    fi
  done
  export AZURE_POSTGRESQL_PASSWORD=$(curl "$MSI_ENDPOINT?resource=https://ossrdbms-aad.database.windows.net&api-version=2019-08-01" -H "X-Identity-Header: $IDENTITY_HEADER" | jq .access_token | cut -d '"' -f 2)
  export POD_IP=$(grep $HOSTNAME /etc/hosts | cut -f 1)
  export POD_A_RECORD=$(echo $POD_IP | sed 's/\./-/g')
  export POD_FQDN=${POD_A_RECORD}.default.pod.cluster.local
  export RELEASE_DISTRIBUTION=name
  export RELEASE_NODE=platform@$POD_IP
fi
