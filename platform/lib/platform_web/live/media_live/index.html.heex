<article class={"w-full min-h-[90vh] px-4 md:px-8 " <> (if @full_width, do: "mt-8", else: "")}>
  <% next_link =
    Routes.live_path(
      @socket,
      PlatformWeb.MediaLive.Index,
      @query_params
      |> Map.put(:ac, @results.metadata.after)
      |> Map.put(:bc, nil)
      |> Map.put(:pi, @pagination_index + 1)
    ) %>
  <% prev_link =
    Routes.live_path(
      @socket,
      PlatformWeb.MediaLive.Index,
      @query_params
      |> Map.put(:bc, @results.metadata.before)
      |> Map.put(:ac, nil)
      |> Map.put(:pi, @pagination_index - 1)
    ) %>
  <div class="relative z-[1000] 2xl:max-w-[1210px] mx-auto h-[9rem]">
    <%= if @selected_ids != [] do %>
      <div class="mb-4 w-full flex text-sm items-center divide-x border bg-white shadow-sm rounded-lg transition-all">
        <p class="p-4 text-urge-600">
          <span class="font-medium">
            <%= length(@selected_ids) %>
          </span>
          <%= if length(@selected_ids) != 1 do %>
            incidents
          <% else %>
            incident
          <% end %>
          selected
        </p>
        <div class="p-4 hover:bg-neutral-50 transition">
          <.dropdown label="Add tag">
            <div class="p-4 ts-ignore flex flex-col gap-4" x-data="{tag: null}">
              <select x-model="tag" class="w-full input-base" id="bulk-action-select">
                <option value="">Select a tag</option>
                <%= for tag <- Platform.Material.Attribute.options(Platform.Material.Attribute.get_attribute(:tags, project: @active_project)) do %>
                  <option value={tag}><%= tag %></option>
                <% end %>
              </select>
              <button
                class="button ~urge @high"
                x-bind:disabled="tag == null || tag == ''"
                phx-click="apply_tag"
                x-bind:phx-value-tag="tag"
                x-bind:data-confirm={"\"Are you sure you want to apply the tag \" + tag + \" to the #{length(@selected_ids)} selected incident(s)?\""}
                x-on:click="open = false; window.topbar.show()"
                phx-disable-with="Working..."
              >
                Apply
              </button>
            </div>
          </.dropdown>
        </div>
        <div class="p-4 hover:bg-neutral-50 transition">
          <.dropdown label="Set status">
            <div class="p-4 ts-ignore flex flex-col gap-4" x-data="{status: null}">
              <select x-model="status" class="w-full input-base" id="status-select">
                <option value="">Select a status</option>
                <%= for status <- Platform.Material.Attribute.options(Platform.Material.Attribute.get_attribute(:status, project: @active_project)) do %>
                  <option value={status}><%= status %></option>
                <% end %>
              </select>
              <button
                class="button ~urge @high"
                x-bind:disabled="status == null || status == ''"
                phx-click="apply_status"
                x-bind:phx-value-status="status"
                x-bind:data-confirm={"\"Are you sure you want to set the status to \" + status + \" for the #{length(@selected_ids)} selected incident(s)?\""}
                x-on:click="open = false; window.topbar.show()"
                phx-disable-with="Working..."
              >
                Apply
              </button>
            </div>
          </.dropdown>
        </div>
        <div class="p-4 hover:bg-neutral-50 transition flex gap-4 items-center flex-grow justify-end">
          <button phx-click="select_all" class="text-button" phx-disable-with="Selecting...">
            Select All
          </button>
          <button phx-click="deselect_all" class="text-button" phx-disable-with="Closing...">
            Cancel
          </button>
        </div>
      </div>
    <% else %>
      <.search_form
        changeset={@changeset}
        exclude={if @display == "map", do: [:sort], else: []}
        query_params={@query_params}
        socket={@socket}
        current_user={@current_user}
        display={@display}
        active_project={@active_project}
      >
        <:pagination>
          <%= if @display != "map" do %>
            <div class="flex items-center">
              <div>
                <.pagination_controls
                  next_link={next_link}
                  prev_link={prev_link}
                  pagination_metadata={@results.metadata}
                  pagination_index={@pagination_index}
                  currently_displayed_results={length(@media)}
                  id="pagination-table"
                />
              </div>
            </div>
          <% end %>
        </:pagination>
      </.search_form>
    <% end %>
  </div>
  <section>
    <%= if (not Enum.empty?(@media)) or @display == "map" do %>
      <%= case @display do %>
        <% "map" -> %>
          <% map_data =
            @media
            |> Enum.filter(&(not is_nil(&1.attr_geolocation)))
            |> Enum.map(fn item ->
              {lon, lat} = item.attr_geolocation.coordinates

              %{
                slug: item.slug,
                # Stringify to avoid floating point issues
                lat: "#{lat}",
                lon: "#{lon}",
                type: Material.get_media_organization_type(item),
                color: item.display_color || "#60a5fa"
              }
            end) %>
          <% nongeolocated_length = length(@media) - length(map_data) %>
          <div class="flex justify-around">
            <%= if Ecto.Changeset.get_change(@changeset, :query) != nil and nongeolocated_length > 0 do %>
              <button
                class="relative text-sm focus:outline shadow md:-mt-4 z-[10] bg-white py-2 px-4 rounded-full text-center mx-auto text-neutral-600"
                type="button"
                x-on:click="document.getElementById('search-form-cards-button').click()"
              >
                <span class="font-medium text-neutral-800">
                  <%= nongeolocated_length |> Formatter.format_number() %>
                </span>
                ungeolocated incidents also match &rarr;
              </button>
            <% end %>
            <%= if Enum.empty?(@media) do %>
              <div class="relative text-sm shadow md:-mt-4 z-[10] bg-white py-2 px-4 rounded-full text-center mx-auto text-neutral-600">
                No results found
              </div>
            <% end %>
          </div>
          <.map_events map_data={map_data} />
        <% "cards" -> %>
          <div class="top-scroll-anchor"></div>
          <div class="grid gap-4 grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 search-highlighting">
            <%= for media <- @media do %>
              <.media_card media={media} current_user={@current_user} />
            <% end %>
          </div>
        <% "table" -> %>
          <%= if is_nil(@active_project) do %>
            <div class="flex justify-center">
              <div class="flex flex-col items-center justify-around h-full min-h-[60vh]">
                <div class="flex flex-col justify-around items-center gap-4">
                  <Heroicons.squares_2x2 class="h-16 w-16 text-neutral-400" />
                  <h2 class="text-lg font-medium text-center">Select a project</h2>
                  <p class="text-sm text-neutral-600 mb-8 text-center">
                    Every project has a different schema &mdash; select a project to view these incidents in a table.
                  </p>
                  <%= if not Enum.empty?(@user_projects) do %>
                    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
                      <%= for project <- @user_projects |> Enum.sort_by(& &1.updated_at, {:desc, NaiveDateTime}) do %>
                        <.link
                          navigate={
                            Routes.live_path(
                              @socket,
                              PlatformWeb.MediaLive.Index,
                              @query_params
                              |> Map.put(:project_id, project.id)
                            )
                          }
                          replace={true}
                        >
                          <.project_card_inner project={project} />
                        </.link>
                      <% end %>
                    </div>
                  <% else %>
                    <p class="italic text-sm text-neutral-600 text-center">
                      You don't have any projects.
                    </p>
                  <% end %>
                </div>
              </div>
            </div>
          <% else %>
            <section class="-mx-4 md:-mx-8">
              <div class="overflow-x-scroll overflow-y-visible w-full">
                <div class="inline-block align-middle w-full">
                  <div class="!shadow-inner ring-1 ring-black ring-opacity-5 max-h-[calc(100vh-11rem)] relative w-full">
                    <table class="border-separate sticky-headers w-full" style="border-spacing: 0">
                      <thead class="bg-gray-200 whitespace-nowrap">
                        <tr>
                          <th
                            scope="col"
                            class="md:sticky left-0 z-[101] top-0 border-b border-t border-neutral-200 bg-neutral-100 px-2 py-3 font-medium text-sm text-left"
                          >
                            Incident
                          </th>
                          <%= for attr <- @attributes do %>
                            <th
                              scope="col"
                              class="md:sticky z-[100] top-0 border-b border-t border-neutral-200 bg-neutral-100 bg-opacity-[95%] px-2 py-3 font-medium text-sm text-left"
                            >
                              <%= attr.label %>
                            </th>
                          <% end %>
                          <%= for idx <- 0..@source_cols do %>
                            <th
                              scope="col"
                              class="md:sticky z-[100] top-0 border-b border-t border-neutral-200 bg-neutral-100 bg-opacity-[95%] px-4 py-3 font-medium text-sm text-left"
                            >
                              Source <%= idx + 1 %>
                            </th>
                          <% end %>
                        </tr>
                      </thead>
                      <div class="top-scroll-anchor"></div>
                      <tbody class="bg-white" id="media-list-table-body">
                        <%= for media <- @media do %>
                          <.media_table_row
                            media={media}
                            id={"incident-row-#{media.slug}"}
                            current_user={@current_user}
                            attributes={@attributes}
                            source_cols={@source_cols}
                            is_selected={Enum.member?(@selected_ids, media.id)}
                          />
                        <% end %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </section>
          <% end %>
      <% end %>
    <% else %>
      <.no_media_results />
    <% end %>
    <%= if @display == "cards" do %>
      <div class="mx-auto mt-8 text-center text-xs">
        <.pagination_controls
          next_link={next_link}
          prev_link={prev_link}
          pagination_metadata={@results.metadata}
          pagination_index={@pagination_index}
          currently_displayed_results={length(@media)}
          id="pagination-bottom"
        />
      </div>
    <% end %>
  </section>
  <%= with {media, attribute_name} <- @editing do %>
    <.live_component
      module={PlatformWeb.MediaLive.EditAttribute}
      id="edit-attribute"
      media={media}
      name={attribute_name}
      target={@root_pid}
      current_user={@current_user}
    />
  <% end %>
</article>
