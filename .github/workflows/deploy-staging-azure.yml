# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# TODO: Once we're running on Azure in production, I'll update this action to use environments for all vars (so that we can share it between environments)

name: Build and deploy staging (Azure)

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "platform/**"
  #     - ".github/workflows/deploy-staging-azure.yml"

  # Allow mannually trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: ./platform
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: https://atlos.azurecr.io/
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./platform
          tags: atlos.azurecr.io/${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}/platform:${{ github.sha }}
          file: ./platform/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: APP_REVISION=${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: deploy:${{ github.ref }}
    environment:
      name: "staging"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ATLOSSTAGING_AZURE_CREDENTIALS }}
      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: atlos-staging
          resourceGroup: staging
          imageToDeploy: atlos.azurecr.io/${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}/platform:${{ github.sha }}
          # Note: you must manually reference the secrets created by the service connector here; they will not persist across deploys if you don't
          environmentVariables: 'AWS_REGION=us-east-1 WEBSITES_PORT=4000 PORT=4000 AWS_ACCESS_KEY_ID=secretref:aws-access-key-id AWS_SECRET_ACCESS_KEY=secretref:aws-secret-access-key AUTOTAG_USER_INCIDENTS=["Volunteer"] S3_BUCKET=atlos-content-dev AZURE_POSTGRESQL_DATABASE=secretref:azure-postgresql-database-0488c AZURE_POSTGRESQL_SSL=true AZURE_POSTGRESQL_PORT=secretref:azure-postgresql-port-76bd3 AZURE_POSTGRESQL_HOST=secretref:azure-postgresql-host-27ab9 AZURE_POSTGRESQL_USERNAME=secretref:azure-postgresql-username-9524a APPSIGNAL_APP_ENV=secretref:appsignal-app-env APPSIGNAL_PUSH_API_KEY=secretref:appsignal-push-api-key CLUSTER_SECRET=secretref:cluster-secret COOKIE_SIGNING_SALT=secretref:cookie-signing-salt ENVIRONMENT=staging ENABLE_CAPTCHAS=true HCAPTCHA_SECRET=secretref:hcaptcha-secret HCAPTCHA_SITE_KEY=secretref:hcaptcha-site-key HIGHLIGHT_CODE=secretref:highlight-code INSTANCE_NAME=staging LANG=en_US.UTF-8 MIX_ENV=prod ONBOARDING_PROJECT_ID=deb6c474-34f1-47ab-a3b5-3928548178c3 PHX_HOST=staging-azure.atlos.org SECRET_KEY_BASE=secretref:secret-key-base SLACK_AUDITING_WEBHOOK=secretref:slack-auditing-webhook SPN_ARCHIVE_API_KEY=secretref:spn-archive-api-key'
